#ifndef ZRPC_FUNCTIONS
#define ZRPC_FUNCTIONS

#include "zrpc.h"

int zrpc_VM_unpause(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_pause(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_boot(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_poweroff(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_shutdown(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_reboot(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_disableStateHandling(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getGraphicalConsoleTunnelPort(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getName(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_enableStateHandling(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_exists(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_isVMIgnored(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_get(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getUpdatables(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getAll(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getAllFull(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getAllUpdatables(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getUsers(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getPrivilege(const char *uuid, int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_grantPrivilege(const char *uuid, int uid, int level, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_revokePrivilege(const char *uuid, int uid, int level, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_hasTextConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_hasGraphicalConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getSupportedConsoles(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_disconnectTextConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_disconnectGraphicalConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_connectGraphicalConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_connectTextConsole(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_hasConsoleLock(const char *uuid, const char *type, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getConsoleLockSession(const char *uuid, const char *type, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getConsoleClientHost(const char *uuid, const char *type, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getConsoleNodeHost(const char *uuid, const char *type, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getGraphicalConsolePort(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTextConsolePort(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getConsoleLockUsername(const char *uuid, const char *type, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getId(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getNotes(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_saveNotes(const char *uuid, const char *notes, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getParentNodeAddress(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getParentNode(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getLogs(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTemplates(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTemplate(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_needsReboot(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_save(zrpc_vm *vm, Eina_Bool maketemplate, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_snapshot(const char *uuid, Eina_Bool memory, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVCPUs(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVNCport(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getCPUtime(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getNumNETIFs(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getNumDisks(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getMemory(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getMaxMemory(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getUptime(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getUptimeStr(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getState(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getStateStr(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getType(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getOS(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVNCpass(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getCPUpct(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_hasGuestTools(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getCPUpctHist(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getAvgCPUpct(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getNETIFs(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_offlineVif(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_offlineVifByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_onlineVif(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_onlineVifByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_detachVif(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_detachVifByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifName(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifNameByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifScript(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifScriptByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifMAC(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifBridge(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifBridgeByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifType(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getVifTypeByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getBytesTotal(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesInByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesInByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesOutByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTotalBytesOutByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxPacketsByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxPacketsByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxPacketsByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxPacketsByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxBytesByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxBytesByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxBytesByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxBytesByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxDropByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxDropByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxDropByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxDropByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxErrByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getTxErrByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxErrByVifID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getRxErrByMAC(const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDisks(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskType(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskPath(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskIntDev(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskMode(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskWrites(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskOutof(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_getDiskReads(const char *uuid, const char *extdev, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_VM_detachDiskByID(const char *uuid, const char *mac, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getLogs(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_get(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getAll(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getEnabled(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getDisabled(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getUnconfigured(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getByHostname(const char *hostname, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getNetworks(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getAddress(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getLoadavg(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getPrivilege(const char *uuid, int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_grantPrivilege(const char *uuid, int uid, int level, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_revokePrivilege(const char *uuid, int uid, int level, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_supportsHVM(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getControlModule(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_setControlModule(const char *uuid, const char *controlmodule, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_isEnabled(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_enable(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_disable(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_remove(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getStat(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_getStats(const char *uuid, int start_epoch, int end_epoch, int max_events, int interval, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Node_maintenanceMode(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_exists(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_isActive(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_generatePassword(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getName(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_logout(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_logoutByUID(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_login(const char *user, const char *pass, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getAll(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_get(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getByName(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getUID(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getByUID(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_add(zrpc_user *new, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_setMyPassword(const char *oldpassword, const char *password, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_setPasswordByUID(int uid, const char *password, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_remove(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_modify(int uid, zrpc_user *u, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_existsGroup(int gid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_existsGroupByName(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_removeGroup(int gid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getGroupsByUID(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getGroup(int gid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getGroups(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getGroupsFull(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_getGroupMembers(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_addToGroup(int uid, const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_removeFromGroup(int uid, const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_User_renameGroup(const char *old_name, const char *new_name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Session_check(const char *sessid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Session_getSession(const char *sessid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_log(const char *msg, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getConfig(const char *key, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getLanguages(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_setConfig(const char *key, const char *value, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getFrontendPlugins(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_modifyPlugin(const char *name, Eina_Bool enabled, Eina_Bool xmlrpc, Eina_Bool frontend, Eina_Bool scheduler, Eina_Bool poller, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_isFrontendPluginEnabled(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getAllPlugins(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_configPush(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_generateUUID(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatforms(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformsFull(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatform(int id, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_modifyPlatform(int id, PLATFORM p, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformByName(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModulesByPlatform(int platformid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModulesFull(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModules(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModule(int id, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModuleByName(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_isPlatform(const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_isPlatformModule(const char *name, int platformid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_addPlatform(PLATFORM p, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_setPlatformConfig(int id, char *config, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformConfig(int id, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_getPlatformModuleConfig(int id, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Zentific_setPlatformModuleConfig(int id, char *config, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJob(int id, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJobs(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJobsByUID(int uid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJobsByUUID(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJobStatus(int jobid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Scheduler_getJobsStatus(int *jobids, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_system_listMethods(zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_system_methodHelp(const char *methodname, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_system_methodSignature(const char *methodname, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Network_getBridges(const char *uuid, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
int zrpc_Network_getBridge(const char *uuid, const char *name, zrpc_con *zcon, zrpc_network_cb cb, void *cbd);
#endif
